데이터베이스
-> 정형 vs 비정형

관계형 데이터베이스 (정형)

릴레이션 (테이블)
-> 행과 열로 만들어져 관계를 나타내는 테이블

로우 (행)
-> 저장할 대상의 자료를 갖고있음 / 레코드 -(CRUD)

컬럼 (열)
-> 행들에 저장될 내용을 나타냄 / 필드 - (속성, 제약조건)

제약조건
-> Not null / check / default / unique ... etc

키
-> 컬럼에 부여하는 기능 / (기본키, 외래키)

기본키 (PK)
-> 유일성을 판단하여 튜플을 유일하게 식별, 기본키로 index를 형성하여 저장함
-> 검색속도가 향상, null 불가 - (not null)

외래키 (FK)
-> 테이블 정규화 (중복을 최소화하기 위한 테이블 쪼개기) -> 일관성이 떨어지고 신뢰성이 떨어짐 -> 무결성이 깨짐
-> 자식 릴레이션에 외래키가 부모 릴레이션의 특정 컬럼을 참조하여
-> 데이터의 중복을 최소화한다.
-> 삽입이상, 삭제이상, 갱신이상 
변수
명령어

DBMS - Data Base Management System -> Oracle 11g r2

Oracle 11g <- Sql plus를 사용해 조작
localhost
ip : 주소
포트넘버 : 프로그램 주소
Sql developer - Oracle 제공하는 DB IDE
1. 정체를 파악
2. 설치에 대한 자료 수집
3. 설치 시도

CRUD
insert
select
update
delete

1. 테이블 관리 	
: create table, drop table, alter table
: 테이블(릴레이션), 속성(속성타입, 제약조건)
: 타입 - int, number*, varchar2, timestamp
: 제약 조건 : 유일성(기본키, unique), not null, check, default
: 키 	- 기본키 - 유일성, not null, 인덱스형성(검색속도 향상 - where 절에서 사용
	- 외래키 - 컬럼 투 컬럼, 자식 릴레이션 컬럼이 부모
		릴레이션의 컬럼을 참조한다.
		외래키 제약 조건 : cascade, set null
: ERD - 개체와 개체의 관계분석 1:1, 1:N, N:M 분석 후 테이블 형성

2. 테이블에 저장된 튜플의 조작
삽입 - insert
갱신 - update : 특정 튜플을 선택하여 갱신하려면 where절 사용 
삭제 - delete : 특정 튜플을 선택하여 삭제하려면 where절 사용 
검색 - select :  각 절의 의미 암기, 절의 실행 순서 이해

-------------20240903-----------------------

3. 함수 :   함수를 호출하고 함수의 기능을 실행하고 결과값을 리턴, 
             결과값을 리턴받아서 처리 한다...  예를 들어  count(*)함수를 호출하면 튜플의 수를 
             카운팅하여 카운팅 결과값을 리턴한다.
함수
- 특정 기능을 제공
- 내가 직접 만드는 것과 이미 만들어진것을 사용하는 것
함수 기능, 매개변수, 리턴 값 
매개변수 : function (abc) -> 소괄호 안에 있는 abc - 함수를 선언할 때 주는 값
인자 : 매개변수 자리에 들어가는 값 - 함수를 호출할 때 입력하는 실제 값
- 사용하는 입장에서 호출할 때 값을 넘겨줄 수 있다.(매개변수)
-> 값을 받아 리턴을 함

ex) lower('ABCD') => abcd
인자값 ABCD가 매개변수로 전달된 후 함수 기능을 통해서 abcd라는 결과값으로 리턴함 

group by 그룹화
having 그룹 안에 조건을 줄 때 사용
순서 select ~~~ from ~~~ where ~~~ group by ~~ having ~~ order by~~
서브쿼리는 본 쿼리 안에 소괄호로 시작하는 select문
서브쿼리의 결과값을 본쿼리의 활용한다.
서브쿼리는 본쿼리의 조건으로 활용이 가능 - where, having
본쿼리의 테이블로 활용가능  - from
본쿼리의 원하는 컬럼에서 활용가능- select

정리
select에서 서브 쿼리를 활용하면  > 스칼라 서브쿼리

from에서 서브 쿼리를 활용하면 > 인라인뷰 서브쿼리

스칼라 서브쿼리
인라인 뷰 
over 함수 
-------------20240904----------------------- 

distinct는 중복된 컬럼을 제거하고 select절에서 한번만 사용이 가능
중복제거 범위는 select에서 지정한 전체 행의 중복이다.

조인
https://codingwone.tistory.com/29
https://velog.io/@gayeong39/Oracle-%EC%98%A4%EB%9D%BC%ED%81%B4-%EC%A1%B0%EC%9D%B8
1개 이상의 테이블을 논리적으로 합치는 것 
조인의 종류
FULL JOIN

INNER JOIN
공통된 속성만 

OUTER JOIN

join : 1개 이상의 테이블을 논리적으로 합치는 것
종류 : full join : 두개의 테이블을 모두 합치는 것
결과는 n*m의 수만큼 조인이 되어 튜플이 만들어 진다.
    inner join : 조건을 제시한다. 조건에 참일 경우만 조인한다.
        종류 : 동등이너조인(==), 비동등이너조인(!=)
    outer join : 이너조인 + 조인에 참여하지 않은 튜플까지 출력
        종류 : 테이블 조인의 위치에 따라 left outer join, right outer join 
공부에 방향은 : 어떤 테이블을 조인할까? 어떤 조인을 사용할까?
먼저 full join해본다.. 절대 현업에서는 X -> 속도 느려짐

조인을 한 후에 그룹화를 진행
조인을 해서 만들어진 테이블 안에서 그룹화를 진행한다.

여러개의 테이블을 조인할 때 concat함수를 사용하는 것처럼 
두개의 테이블을 먼저 조인한 후 조인해서 나온 테이블의 튜플과 
조인하고자하는 새로운 테이블을 또 조인한다.
10개든 100개든 그렇게 계속 조인을 진행
(a 조인 b) -> (a 조인 b) 조인 c)

-------------20240905-----------------------
VIEW 
가상의 테이블 
뷰를 통해서 삽입, 삭제, 갱신이 가능하지만(이론적으론)
테이블 무결성 제약조건에 위배가 되지 않아야 한다.
뷰는 조회 목적으로 사용하는것을 지향

